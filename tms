#!/usr/bin/env bash

kill_mode=0
detached_mode=0
existing_sessions=0
link_session=0

# Get the directory of the currently executing script
dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
dir+="/cfg"

while getopts "kdel" opt; do
    case $opt in
        k) kill_mode=1;;
        d) detached_mode=1 ;;
        e) existing_sessions=1 ;;
        l) link_session=1 ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 1 ;;
    esac
done

# this is horrendous but how tf else am I gonna ensure order of operations
if [[ $kill_mode -eq 1 ]]; then if [[ $detached_mode -eq 1 ]] || [[ $link_session -eq 1 ]] then
    echo "[k] kill mode flag is exclusive" >&2
    exit 1
fi fi

if [[ $link_session -eq 1 ]] || [[ $kill_mode -eq 1 ]]; then
    existing_sessions=1
fi

# Remove the options from the positional parameters
shift $((OPTIND-1))

if [[ $# -eq 1 ]] && [[ -d $1 ]]; then
    selected=$(realpath "$1")
else
    if [[ $# -eq 1 ]]; then
        echo "Invalid directory: $1" >&2
        exit 1
    fi

    if [[ $existing_sessions -eq 1 ]]; then
        multi_flag=""
        multi_string=""
        kill_string=""
        if [[ $kill_mode -eq 1 ]]; then
            multi_flag="-m"
            multi_string="(s)"
            kill_string=" to kill"
        fi

        selected=$(tmux list-sessions -F "#S" 2>/dev/null | fzf $multi_flag --prompt="Select tmux session$multi_string$kill_string: " --preview='tmux capture-pane -pet {}' --preview-window down)
        if [[ -z $selected ]]; then
            echo "No session selected."
            exit 0
        fi
    else
        search_locations=""
        while IFS= read -r line; do
            search_locations+=" $(expandhome "$line")"
        done < "$dir/wloc.txt"

        selected=$(find -L $search_locations -mindepth 1 -maxdepth 1 -type d 2> >(grep -v "Too many levels of symbolic links" >&2) | sort | uniq | fzf)
    fi
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(echo "$selected" | tr . _)

if [[ $kill_mode -eq 1 ]]; then
    while IFS= read -r session_name; do
        echo "killing session: $session_name"
        tmux kill-session -t "$session_name"
    done <<< "$selected_name"
    exit 0
fi

if [[ $detached_mode -eq 1 ]]; then
    if ! tmux has-session -t="$selected_name" 2> /dev/null; then
        tmux new-session -ds "$selected_name" -c "$selected"
    elif [[ $link_session -eq 1 ]]; then
        tmux new-session -t "$selected_name" -d
    fi
else
    if [[ -n $TMUX ]]; then
        if ! tmux has-session -t="$selected_name" 2> /dev/null; then
            tmux new-session -ds "$selected_name" -c "$selected"
        elif [[ $link_session -eq 1 ]]; then
            if [[ $selected_name =~ ^(.*)-[0-9]+$ ]]; then
                selected_name="${BASH_REMATCH[1]}"
            fi
            tmux new-session -dt "$selected_name"
            selected_name=$(tmux list-sessions -F "#S" | grep "^${selected_name}" | tail -n 1)
        fi
        tmux switch-client -t "$selected_name"
    else
        if [[ $link_session -eq 1 ]]; then
            tmux new-session -t "$selected_name"
        elif tmux has-session -t="$selected_name" 2> /dev/null; then
            tmux attach -t "$selected_name"
        else
            tmux new-session -s "$selected_name" -c "$selected"
        fi
    fi
fi

